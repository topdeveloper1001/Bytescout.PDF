namespace Bytescout.PDF
{
    internal static class Base14GlyfWidth
    {
	    private static readonly int[] Courier =
        {600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 0, 600, 600, 600, 600, 
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 
        600, 600, 600, 600};

        private static readonly int[] Helvetica = 
        {277, 277, 354, 556, 556, 889, 666, 190, 333, 333, 389, 583, 277, 333, 277, 277, 556, 556, 556, 556, 
        556, 556, 556, 556, 556, 556, 277, 277, 583, 583, 583, 556, 1015, 666, 666, 722, 722, 666, 610, 777, 
        722, 277, 500, 666, 556, 833, 722, 777, 666, 777, 722, 666, 610, 722, 666, 943, 666, 666, 610, 277, 
        277, 277, 469, 556, 333, 556, 556, 500, 556, 556, 277, 556, 556, 222, 222, 500, 222, 833, 556, 556, 
        556, 556, 333, 500, 277, 556, 500, 722, 500, 500, 500, 333, 259, 333, 583, 0, 666, 666, 722, 666, 
        722, 777, 722, 556, 556, 556, 556, 556, 556, 500, 556, 556, 556, 556, 277, 277, 277, 277, 556, 556, 
        556, 556, 556, 556, 556, 556, 556, 556, 277, 333, 556, 556, 556, 556, 259, 556, 333, 736, 370, 556, 
        583, 333, 736, 552, 399, 548, 333, 333, 333, 576, 537, 333, 333, 333, 365, 556, 833, 833, 833, 610, 
        666, 666, 666, 666, 666, 666, 1000, 722, 666, 666, 666, 666, 277, 277, 277, 277, 722, 722, 777, 777, 
        777, 777, 777, 583, 777, 722, 722, 722, 722, 666, 666, 610, 556, 556, 556, 556, 556, 556, 889, 500, 
        556, 556, 556, 556, 277, 277, 277, 277, 556, 556, 556, 556, 556, 556, 556, 548, 610, 556, 556, 556, 
        556, 500, 556, 500};

        private static readonly int[] HelveticaBold = 
        {277, 333, 474, 556, 556, 889, 722, 237, 333, 333, 389, 583, 277, 333, 277, 277, 556, 556, 556, 556, 
        556, 556, 556, 556, 556, 556, 333, 333, 583, 583, 583, 610, 975, 722, 722, 722, 722, 666, 610, 777, 
        722, 277, 556, 722, 610, 833, 722, 777, 666, 777, 722, 666, 610, 722, 666, 943, 666, 666, 610, 333, 
        277, 333, 583, 556, 333, 556, 610, 556, 610, 556, 333, 610, 610, 277, 277, 556, 277, 889, 610, 610, 
        610, 610, 389, 556, 333, 610, 556, 777, 556, 556, 500, 389, 279, 389, 583, 0, 722, 722, 722, 666, 
        722, 777, 722, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 277, 277, 277, 277, 610, 610, 
        610, 610, 610, 610, 610, 610, 610, 610, 277, 333, 556, 556, 556, 556, 279, 556, 333, 736, 370, 556, 
        583, 333, 736, 552, 399, 548, 333, 333, 333, 576, 556, 333, 333, 333, 365, 556, 833, 833, 833, 610, 
        722, 722, 722, 722, 722, 722, 1000, 722, 666, 666, 666, 666, 277, 277, 277, 277, 722, 722, 777, 777, 
        777, 777, 777, 583, 777, 722, 722, 722, 722, 666, 666, 610, 556, 556, 556, 556, 556, 556, 889, 556, 
        556, 556, 556, 556, 277, 277, 277, 277, 610, 610, 610, 610, 610, 610, 610, 548, 610, 610, 610, 610, 
        610, 556, 610, 556};

        private static readonly int[] Times = 
        {250, 333, 408, 500, 500, 833, 777, 180, 333, 333, 500, 563, 250, 333, 250, 277, 500, 500, 500, 500, 
        500, 500, 500, 500, 500, 500, 277, 277, 563, 563, 563, 443, 920, 722, 666, 666, 722, 610, 556, 722, 
        722, 333, 389, 722, 610, 889, 722, 722, 556, 722, 666, 556, 610, 722, 722, 943, 722, 722, 610, 333, 
        277, 333, 469, 500, 333, 443, 500, 443, 500, 443, 333, 500, 500, 277, 277, 500, 277, 777, 500, 500, 
        500, 500, 333, 389, 277, 500, 500, 722, 500, 500, 443, 479, 200, 479, 541, 0, 722, 722, 666, 610, 
        722, 722, 722, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 443, 277, 277, 277, 277, 500, 500, 
        500, 500, 500, 500, 500, 500, 500, 500, 250, 333, 500, 500, 500, 500, 200, 500, 333, 759, 275, 500, 
        563, 333, 759, 500, 399, 548, 299, 299, 333, 576, 453, 333, 333, 299, 310, 500, 750, 750, 750, 443, 
        722, 722, 722, 722, 722, 722, 889, 666, 610, 610, 610, 610, 333, 333, 333, 333, 722, 722, 722, 722, 
        722, 722, 722, 563, 722, 722, 722, 722, 722, 722, 556, 500, 443, 443, 443, 443, 443, 443, 666, 443, 
        443, 443, 443, 443, 277, 277, 277, 277, 500, 500, 500, 500, 500, 500, 500, 548, 500, 500, 500, 500, 
        500, 500, 500, 500};

        private static readonly int[] TimesBold = 
        {250, 333, 555, 500, 500, 1000, 833, 277, 333, 333, 500, 569, 250, 333, 250, 277, 500, 500, 500, 500, 
        500, 500, 500, 500, 500, 500, 333, 333, 569, 569, 569, 500, 930, 722, 666, 722, 722, 666, 610, 777, 
        777, 389, 500, 777, 666, 943, 722, 777, 610, 777, 722, 556, 666, 722, 722, 1000, 722, 722, 666, 333, 
        277, 333, 581, 500, 333, 500, 556, 443, 556, 443, 333, 500, 556, 277, 333, 556, 277, 833, 556, 500, 
        556, 556, 443, 389, 333, 556, 500, 722, 500, 500, 443, 394, 220, 394, 520, 0, 722, 722, 722, 666, 
        722, 777, 722, 500, 500, 500, 500, 500, 500, 443, 443, 443, 443, 443, 277, 277, 277, 277, 556, 500, 
        500, 500, 500, 500, 556, 556, 556, 556, 250, 333, 500, 500, 500, 500, 220, 500, 333, 747, 299, 500, 
        569, 333, 747, 500, 399, 548, 299, 299, 333, 576, 540, 333, 333, 299, 330, 500, 750, 750, 750, 500, 
        722, 722, 722, 722, 722, 722, 1000, 722, 666, 666, 666, 666, 389, 389, 389, 389, 722, 722, 777, 777, 
        777, 777, 777, 569, 777, 722, 722, 722, 722, 722, 610, 556, 500, 500, 500, 500, 500, 500, 722, 443, 
        443, 443, 443, 443, 277, 277, 277, 277, 500, 556, 500, 500, 500, 500, 500, 548, 500, 556, 556, 556, 
        556, 500, 556, 500};

        private static readonly int[] TimesBoldItalic = 
        {250, 389, 555, 500, 500, 833, 777, 277, 333, 333, 500, 569, 250, 333, 250, 277, 500, 500, 500, 500, 
        500, 500, 500, 500, 500, 500, 333, 333, 569, 569, 569, 500, 832, 666, 666, 666, 722, 666, 666, 722, 
        777, 389, 500, 666, 610, 889, 722, 722, 610, 722, 666, 556, 610, 722, 666, 889, 666, 610, 610, 333, 
        277, 333, 569, 500, 333, 500, 500, 443, 500, 443, 333, 500, 556, 277, 277, 500, 277, 777, 556, 500, 
        500, 500, 389, 389, 277, 556, 443, 666, 500, 443, 389, 348, 220, 348, 569, 0, 666, 666, 666, 666, 
        722, 722, 722, 500, 500, 500, 500, 500, 500, 443, 443, 443, 443, 443, 277, 277, 277, 277, 556, 500, 
        500, 500, 500, 500, 556, 556, 556, 556, 250, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 
        605, 333, 747, 500, 399, 548, 299, 299, 333, 576, 500, 250, 333, 299, 299, 500, 750, 750, 750, 500, 
        666, 666, 666, 666, 666, 666, 943, 666, 666, 666, 666, 666, 389, 389, 389, 389, 722, 722, 722, 722, 
        722, 722, 722, 569, 722, 722, 722, 722, 722, 610, 610, 500, 500, 500, 500, 500, 500, 500, 722, 443, 
        443, 443, 443, 443, 277, 277, 277, 277, 500, 556, 500, 500, 500, 500, 500, 548, 500, 556, 556, 556, 
        556, 443, 500, 443};

        private static readonly int[] TimesItalic = 
        {250, 333, 419, 500, 500, 833, 777, 213, 333, 333, 500, 674, 250, 333, 250, 277, 500, 500, 500, 500, 
        500, 500, 500, 500, 500, 500, 333, 333, 674, 674, 674, 500, 919, 610, 610, 666, 722, 610, 610, 722, 
        722, 333, 443, 666, 556, 833, 666, 722, 610, 722, 610, 500, 556, 722, 610, 833, 610, 556, 556, 389, 
        277, 389, 421, 500, 333, 500, 500, 443, 500, 443, 277, 500, 500, 277, 277, 443, 277, 722, 500, 500, 
        500, 500, 389, 389, 277, 500, 443, 666, 443, 443, 389, 399, 274, 399, 541, 0, 610, 610, 666, 610, 
        666, 722, 722, 500, 500, 500, 500, 500, 500, 443, 443, 443, 443, 443, 277, 277, 277, 277, 500, 500, 
        500, 500, 500, 500, 500, 500, 500, 500, 250, 389, 500, 500, 500, 500, 274, 500, 333, 759, 275, 500, 
        674, 333, 759, 500, 399, 548, 299, 299, 333, 576, 522, 250, 333, 299, 310, 500, 750, 750, 750, 500, 
        610, 610, 610, 610, 610, 610, 889, 666, 610, 610, 610, 610, 333, 333, 333, 333, 722, 666, 722, 722, 
        722, 722, 722, 674, 722, 722, 722, 722, 722, 556, 610, 500, 500, 500, 500, 500, 500, 500, 666, 443, 
        443, 443, 443, 443, 277, 277, 277, 277, 500, 500, 500, 500, 500, 500, 500, 548, 500, 500, 500, 500, 
        500, 443, 500, 443};

        private static readonly int[] Symbol =
        {250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549, 250, 278, 500, 500, 500, 500,
        500, 500, 500, 500, 500, 500, 278, 278, 549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603,
        722, 333, 631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768, 645, 795, 611, 333,
        863, 333, 658, 500, 500, 631, 549, 549, 494, 439, 521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 
        549, 521, 549, 603, 439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 250, 250, 250, 250, 250,
        250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
        250, 250, 250, 250, 250, 250, 250, 250, 750, 620, 247, 549, 167, 713, 500, 753, 753, 753, 753, 1042,
        987, 603, 987, 603, 400, 549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000, 658, 
        823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713, 713, 713, 713, 768, 713, 790, 790, 890,
        823, 549, 250, 713, 603, 603, 1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,
        384, 384, 384, 494, 494, 494, 494, 250, 329, 274, 686, 686, 686, 384, 384, 384, 384, 384, 384,
        494, 494, 494, 250};

        private static readonly int[] ZapfDingbats =
        {278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855, 911, 933, 911, 945, 974, 755,
        846, 762, 761, 571, 677, 763, 760, 759, 754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794,
        816, 823, 789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776, 768, 792, 759, 707,
        708, 682, 701, 826, 815, 789, 789, 707, 687, 696, 689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 
        762, 759, 759, 892, 892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 278, 390, 390, 317, 317,
        276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
        278, 278, 278, 278, 278, 278, 278, 278, 278, 732, 544, 544, 910, 667, 760, 760, 776, 595, 694, 626,
        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 
        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,
        894, 838, 1016, 458, 748, 924, 748, 918, 927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463,
        883, 836, 836, 867, 867, 696, 696, 874, 278, 874, 760, 946, 771, 865, 771, 888, 967, 888, 831, 873,
        927, 970, 918, 278};

	    public static int GetWidth(byte ch, StandardFonts font)
	    {
		    int[] widths = GetWidthArray(font);
		    return widths[ch - 32];
	    }

	    public static int GetWidth(byte[] ch, StandardFonts font)
	    {
		    int[] widths = GetWidthArray(font);
		    int result = 0;
		    for (int i = 0; i < ch.Length; ++i)
			    result += widths[ch[i] - 32];
		    return result;
	    }

	    public static int[] GetWidthArray(StandardFonts font)
	    {
		    switch (font)
		    {
			    case StandardFonts.Courier:
			    case StandardFonts.CourierOblique:
			    case StandardFonts.CourierBold:
			    case StandardFonts.CourierBoldOblique:
				    return Courier;
			    case StandardFonts.Helvetica:
			    case StandardFonts.HelveticaOblique:
				    return Helvetica;
			    case StandardFonts.HelveticaBold:
			    case StandardFonts.HelveticaBoldOblique:
				    return HelveticaBold;
			    case StandardFonts.Symbol:
				    return Symbol;
			    case StandardFonts.Times:
				    return Times;
			    case StandardFonts.TimesBold:
				    return TimesBold;
			    case StandardFonts.TimesBoldItalic:
				    return TimesBoldItalic;
			    case StandardFonts.TimesItalic:
				    return TimesItalic;
			    case StandardFonts.ZapfDingbats:
				    return ZapfDingbats;
		    }
		    return null;
	    }
    }
}

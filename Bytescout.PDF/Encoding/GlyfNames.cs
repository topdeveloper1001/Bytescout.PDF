using System.Collections.Generic;

namespace Bytescout.PDF
{
    internal static class GlyfNames
    {
	    private static readonly Dictionary<string, ushort> Names;
	    private static readonly Dictionary<ushort, string> Chars;

	    static GlyfNames()
        {
            Names = new Dictionary<string, ushort>();
            Chars = new Dictionary<ushort, string>();
            initialize();
        }

        public static char GetChar(string glyfName)
        {
            ushort tmp;
            if (Names.TryGetValue(glyfName, out tmp))
                return (char)tmp;
            return (char)0;
        }

        public static string GetName(ushort ch)
        {
            string tmp;
            if (Chars.TryGetValue(ch, out tmp))
                return tmp;
            return ".notdef";
        }

        private static void addPair(ushort code, string name)
        {
            if (!Names.ContainsKey(name))
                Names.Add(name, code);
            Chars.Add(code, name);
        }

        private static void initialize()
        {
            addPair(0x0000, ".notdef");
            addPair(0x0020, "space");
            addPair(0x0021, "exclam");
            addPair(0x0022, "quotedbl");
            addPair(0x0023, "numbersign");
            addPair(0x0024, "dollar");
            addPair(0x0025, "percent");
            addPair(0x0026, "ampersand");
            addPair(0x0027, "quotesingle");
            addPair(0x0028, "parenleft");
            addPair(0x0029, "parenright");
            addPair(0x002A, "asterisk");
            addPair(0x002B, "plus");
            addPair(0x002C, "comma");
            addPair(0x002D, "hyphen");
            addPair(0x002E, "period");
            addPair(0x002F, "slash");
            addPair(0x0030, "zero");
            addPair(0x0031, "one");
            addPair(0x0032, "two");
            addPair(0x0033, "three");
            addPair(0x0034, "four");
            addPair(0x0035, "five");
            addPair(0x0036, "six");
            addPair(0x0037, "seven");
            addPair(0x0038, "eight");
            addPair(0x0039, "nine");
            addPair(0x003A, "colon");
            addPair(0x003B, "semicolon");
            addPair(0x003C, "less");
            addPair(0x003D, "equal");
            addPair(0x003E, "greater");
            addPair(0x003F, "question");
            addPair(0x0040, "at");
            addPair(0x0041, "A");
            addPair(0x0042, "B");
            addPair(0x0043, "C");
            addPair(0x0044, "D");
            addPair(0x0045, "E");
            addPair(0x0046, "F");
            addPair(0x0047, "G");
            addPair(0x0048, "H");
            addPair(0x0049, "I");
            addPair(0x004A, "J");
            addPair(0x004B, "K");
            addPair(0x004C, "L");
            addPair(0x004D, "M");
            addPair(0x004E, "N");
            addPair(0x004F, "O");
            addPair(0x0050, "P");
            addPair(0x0051, "Q");
            addPair(0x0052, "R");
            addPair(0x0053, "S");
            addPair(0x0054, "T");
            addPair(0x0055, "U");
            addPair(0x0056, "V");
            addPair(0x0057, "W");
            addPair(0x0058, "X");
            addPair(0x0059, "Y");
            addPair(0x005A, "Z");
            addPair(0x005B, "bracketleft");
            addPair(0x005C, "backslash");
            addPair(0x005D, "bracketright");
            addPair(0x005E, "asciicircum");
            addPair(0x005F, "underscore");
            addPair(0x0060, "grave");
            addPair(0x0061, "a");
            addPair(0x0062, "b");
            addPair(0x0063, "c");
            addPair(0x0064, "d");
            addPair(0x0065, "e");
            addPair(0x0066, "f");
            addPair(0x0067, "g");
            addPair(0x0068, "h");
            addPair(0x0069, "i");
            addPair(0x006A, "j");
            addPair(0x006B, "k");
            addPair(0x006C, "l");
            addPair(0x006D, "m");
            addPair(0x006E, "n");
            addPair(0x006F, "o");
            addPair(0x0070, "p");
            addPair(0x0071, "q");
            addPair(0x0072, "r");
            addPair(0x0073, "s");
            addPair(0x0074, "t");
            addPair(0x0075, "u");
            addPair(0x0076, "v");
            addPair(0x0077, "w");
            addPair(0x0078, "x");
            addPair(0x0079, "y");
            addPair(0x007A, "z");
            addPair(0x007B, "braceleft");
            addPair(0x007C, "bar");
            addPair(0x007D, "braceright");
            addPair(0x007E, "asciitilde");
            addPair(0x00A0, "space");
            addPair(0x00A1, "exclamdown");
            addPair(0x00A2, "cent");
            addPair(0x00A3, "sterling");
            addPair(0x00A4, "currency");
            addPair(0x00A5, "yen");
            addPair(0x00A6, "brokenbar");
            addPair(0x00A7, "section");
            addPair(0x00A8, "dieresis");
            addPair(0x00A9, "copyright");
            addPair(0x00AA, "ordfeminine");
            addPair(0x00AB, "guillemotleft");
            addPair(0x00AC, "logicalnot");
            addPair(0x00AD, "hyphen");
            addPair(0x00AE, "registered");
            addPair(0x00AF, "macron");
            addPair(0x00B0, "degree");
            addPair(0x00B1, "plusminus");
            addPair(0x00B2, "twosuperior");
            addPair(0x00B3, "threesuperior");
            addPair(0x00B4, "acute");
            addPair(0x00B5, "mu");
            addPair(0x00B6, "paragraph");
            addPair(0x00B7, "periodcentered");
            addPair(0x00B8, "cedilla");
            addPair(0x00B9, "onesuperior");
            addPair(0x00BA, "ordmasculine");
            addPair(0x00BB, "guillemotright");
            addPair(0x00BC, "onequarter");
            addPair(0x00BD, "onehalf");
            addPair(0x00BE, "threequarters");
            addPair(0x00BF, "questiondown");
            addPair(0x00C0, "Agrave");
            addPair(0x00C1, "Aacute");
            addPair(0x00C2, "Acircumflex");
            addPair(0x00C3, "Atilde");
            addPair(0x00C4, "Adieresis");
            addPair(0x00C5, "Aring");
            addPair(0x00C6, "AE");
            addPair(0x00C7, "Ccedilla");
            addPair(0x00C8, "Egrave");
            addPair(0x00C9, "Eacute");
            addPair(0x00CA, "Ecircumflex");
            addPair(0x00CB, "Edieresis");
            addPair(0x00CC, "Igrave");
            addPair(0x00CD, "Iacute");
            addPair(0x00CE, "Icircumflex");
            addPair(0x00CF, "Idieresis");
            addPair(0x00D0, "Eth");
            addPair(0x00D1, "Ntilde");
            addPair(0x00D2, "Ograve");
            addPair(0x00D3, "Oacute");
            addPair(0x00D4, "Ocircumflex");
            addPair(0x00D5, "Otilde");
            addPair(0x00D6, "Odieresis");
            addPair(0x00D7, "multiply");
            addPair(0x00D8, "Oslash");
            addPair(0x00D9, "Ugrave");
            addPair(0x00DA, "Uacute");
            addPair(0x00DB, "Ucircumflex");
            addPair(0x00DC, "Udieresis");
            addPair(0x00DD, "Yacute");
            addPair(0x00DE, "Thorn");
            addPair(0x00DF, "germandbls");
            addPair(0x00E0, "agrave");
            addPair(0x00E1, "aacute");
            addPair(0x00E2, "acircumflex");
            addPair(0x00E3, "atilde");
            addPair(0x00E4, "adieresis");
            addPair(0x00E5, "aring");
            addPair(0x00E6, "ae");
            addPair(0x00E7, "ccedilla");
            addPair(0x00E8, "egrave");
            addPair(0x00E9, "eacute");
            addPair(0x00EA, "ecircumflex");
            addPair(0x00EB, "edieresis");
            addPair(0x00EC, "igrave");
            addPair(0x00ED, "iacute");
            addPair(0x00EE, "icircumflex");
            addPair(0x00EF, "idieresis");
            addPair(0x00F0, "eth");
            addPair(0x00F1, "ntilde");
            addPair(0x00F2, "ograve");
            addPair(0x00F3, "oacute");
            addPair(0x00F4, "ocircumflex");
            addPair(0x00F5, "otilde");
            addPair(0x00F6, "odieresis");
            addPair(0x00F7, "divide");
            addPair(0x00F8, "oslash");
            addPair(0x00F9, "ugrave");
            addPair(0x00FA, "uacute");
            addPair(0x00FB, "ucircumflex");
            addPair(0x00FC, "udieresis");
            addPair(0x00FD, "yacute");
            addPair(0x00FE, "thorn");
            addPair(0x00FF, "ydieresis");
            addPair(0x0100, "Amacron");
            addPair(0x0101, "amacron");
            addPair(0x0102, "Abreve");
            addPair(0x0103, "abreve");
            addPair(0x0104, "Aogonek");
            addPair(0x0105, "aogonek");
            addPair(0x0106, "Cacute");
            addPair(0x0107, "cacute");
            addPair(0x0108, "Ccircumflex");
            addPair(0x0109, "ccircumflex");
            addPair(0x010A, "Cdotaccent");
            addPair(0x010B, "cdotaccent");
            addPair(0x010C, "Ccaron");
            addPair(0x010D, "ccaron");
            addPair(0x010E, "Dcaron");
            addPair(0x010F, "dcaron");
            addPair(0x0110, "Dcroat");
            addPair(0x0111, "dcroat");
            addPair(0x0112, "Emacron");
            addPair(0x0113, "emacron");
            addPair(0x0114, "Ebreve");
            addPair(0x0115, "ebreve");
            addPair(0x0116, "Edotaccent");
            addPair(0x0117, "edotaccent");
            addPair(0x0118, "Eogonek");
            addPair(0x0119, "eogonek");
            addPair(0x011A, "Ecaron");
            addPair(0x011B, "ecaron");
            addPair(0x011C, "Gcircumflex");
            addPair(0x011D, "gcircumflex");
            addPair(0x011E, "Gbreve");
            addPair(0x011F, "gbreve");
            addPair(0x0120, "Gdotaccent");
            addPair(0x0121, "gdotaccent");
            addPair(0x0122, "Gcommaaccent");
            addPair(0x0123, "gcommaaccent");
            addPair(0x0124, "Hcircumflex");
            addPair(0x0125, "hcircumflex");
            addPair(0x0126, "Hbar");
            addPair(0x0127, "hbar");
            addPair(0x0128, "Itilde");
            addPair(0x0129, "itilde");
            addPair(0x012A, "Imacron");
            addPair(0x012B, "imacron");
            addPair(0x012C, "Ibreve");
            addPair(0x012D, "ibreve");
            addPair(0x012E, "Iogonek");
            addPair(0x012F, "iogonek");
            addPair(0x0130, "Idotaccent");
            addPair(0x0131, "dotlessi");
            addPair(0x0132, "IJ");
            addPair(0x0133, "ij");
            addPair(0x0134, "Jcircumflex");
            addPair(0x0135, "jcircumflex");
            addPair(0x0136, "Kcommaaccent");
            addPair(0x0137, "kcommaaccent");
            addPair(0x0138, "kgreenlandic");
            addPair(0x0139, "Lacute");
            addPair(0x013A, "lacute");
            addPair(0x013B, "Lcommaaccent");
            addPair(0x013C, "lcommaaccent");
            addPair(0x013D, "Lcaron");
            addPair(0x013E, "lcaron");
            addPair(0x013F, "Ldot");
            addPair(0x0140, "ldot");
            addPair(0x0141, "Lslash");
            addPair(0x0142, "lslash");
            addPair(0x0143, "Nacute");
            addPair(0x0144, "nacute");
            addPair(0x0145, "Ncommaaccent");
            addPair(0x0146, "ncommaaccent");
            addPair(0x0147, "Ncaron");
            addPair(0x0148, "ncaron");
            addPair(0x0149, "napostrophe");
            addPair(0x014A, "Eng");
            addPair(0x014B, "eng");
            addPair(0x014C, "Omacron");
            addPair(0x014D, "omacron");
            addPair(0x014E, "Obreve");
            addPair(0x014F, "obreve");
            addPair(0x0150, "Ohungarumlaut");
            addPair(0x0151, "ohungarumlaut");
            addPair(0x0152, "OE");
            addPair(0x0153, "oe");
            addPair(0x0154, "Racute");
            addPair(0x0155, "racute");
            addPair(0x0156, "Rcommaaccent");
            addPair(0x0157, "rcommaaccent");
            addPair(0x0158, "Rcaron");
            addPair(0x0159, "rcaron");
            addPair(0x015A, "Sacute");
            addPair(0x015B, "sacute");
            addPair(0x015C, "Scircumflex");
            addPair(0x015D, "scircumflex");
            addPair(0x015E, "Scedilla");
            addPair(0x015F, "scedilla");
            addPair(0x0160, "Scaron");
            addPair(0x0161, "scaron");
            addPair(0x0162, "Tcommaaccent");
            addPair(0x0163, "tcommaaccent");
            addPair(0x0164, "Tcaron");
            addPair(0x0165, "tcaron");
            addPair(0x0166, "Tbar");
            addPair(0x0167, "tbar");
            addPair(0x0168, "Utilde");
            addPair(0x0169, "utilde");
            addPair(0x016A, "Umacron");
            addPair(0x016B, "umacron");
            addPair(0x016C, "Ubreve");
            addPair(0x016D, "ubreve");
            addPair(0x016E, "Uring");
            addPair(0x016F, "uring");
            addPair(0x0170, "Uhungarumlaut");
            addPair(0x0171, "uhungarumlaut");
            addPair(0x0172, "Uogonek");
            addPair(0x0173, "uogonek");
            addPair(0x0174, "Wcircumflex");
            addPair(0x0175, "wcircumflex");
            addPair(0x0176, "Ycircumflex");
            addPair(0x0177, "ycircumflex");
            addPair(0x0178, "Ydieresis");
            addPair(0x0179, "Zacute");
            addPair(0x017A, "zacute");
            addPair(0x017B, "Zdotaccent");
            addPair(0x017C, "zdotaccent");
            addPair(0x017D, "Zcaron");
            addPair(0x017E, "zcaron");
            addPair(0x017F, "longs");
            addPair(0x0192, "florin");
            addPair(0x01A0, "Ohorn");
            addPair(0x01A1, "ohorn");
            addPair(0x01AF, "Uhorn");
            addPair(0x01B0, "uhorn");
            addPair(0x01E6, "Gcaron");
            addPair(0x01E7, "gcaron");
            addPair(0x01FA, "Aringacute");
            addPair(0x01FB, "aringacute");
            addPair(0x01FC, "AEacute");
            addPair(0x01FD, "aeacute");
            addPair(0x01FE, "Oslashacute");
            addPair(0x01FF, "oslashacute");
            addPair(0x0218, "Scommaaccent");
            addPair(0x0219, "scommaaccent");
            addPair(0x021A, "Tcommaaccent");
            addPair(0x021B, "tcommaaccent");
            addPair(0x02BC, "afii57929");
            addPair(0x02BD, "afii64937");
            addPair(0x02C6, "circumflex");
            addPair(0x02C7, "caron");
            addPair(0x02C9, "macron");
            addPair(0x02D8, "breve");
            addPair(0x02D9, "dotaccent");
            addPair(0x02DA, "ring");
            addPair(0x02DB, "ogonek");
            addPair(0x02DC, "tilde");
            addPair(0x02DD, "hungarumlaut");
            addPair(0x0300, "gravecomb");
            addPair(0x0301, "acutecomb");
            addPair(0x0303, "tildecomb");
            addPair(0x0309, "hookabovecomb");
            addPair(0x0323, "dotbelowcomb");
            addPair(0x0384, "tonos");
            addPair(0x0385, "dieresistonos");
            addPair(0x0386, "Alphatonos");
            addPair(0x0387, "anoteleia");
            addPair(0x0388, "Epsilontonos");
            addPair(0x0389, "Etatonos");
            addPair(0x038A, "Iotatonos");
            addPair(0x038C, "Omicrontonos");
            addPair(0x038E, "Upsilontonos");
            addPair(0x038F, "Omegatonos");
            addPair(0x0390, "iotadieresistonos");
            addPair(0x0391, "Alpha");
            addPair(0x0392, "Beta");
            addPair(0x0393, "Gamma");
            addPair(0x0394, "Delta");
            addPair(0x0395, "Epsilon");
            addPair(0x0396, "Zeta");
            addPair(0x0397, "Eta");
            addPair(0x0398, "Theta");
            addPair(0x0399, "Iota");
            addPair(0x039A, "Kappa");
            addPair(0x039B, "Lambda");
            addPair(0x039C, "Mu");
            addPair(0x039D, "Nu");
            addPair(0x039E, "Xi");
            addPair(0x039F, "Omicron");
            addPair(0x03A0, "Pi");
            addPair(0x03A1, "Rho");
            addPair(0x03A3, "Sigma");
            addPair(0x03A4, "Tau");
            addPair(0x03A5, "Upsilon");
            addPair(0x03A6, "Phi");
            addPair(0x03A7, "Chi");
            addPair(0x03A8, "Psi");
            addPair(0x03A9, "Omega");
            addPair(0x03AA, "Iotadieresis");
            addPair(0x03AB, "Upsilondieresis");
            addPair(0x03AC, "alphatonos");
            addPair(0x03AD, "epsilontonos");
            addPair(0x03AE, "etatonos");
            addPair(0x03AF, "iotatonos");
            addPair(0x03B0, "upsilondieresistonos");
            addPair(0x03B1, "alpha");
            addPair(0x03B2, "beta");
            addPair(0x03B3, "gamma");
            addPair(0x03B4, "delta");
            addPair(0x03B5, "epsilon");
            addPair(0x03B6, "zeta");
            addPair(0x03B7, "eta");
            addPair(0x03B8, "theta");
            addPair(0x03B9, "iota");
            addPair(0x03BA, "kappa");
            addPair(0x03BB, "lambda");
            addPair(0x03BC, "mu");
            addPair(0x03BD, "nu");
            addPair(0x03BE, "xi");
            addPair(0x03BF, "omicron");
            addPair(0x03C0, "pi");
            addPair(0x03C1, "rho");
            addPair(0x03C2, "sigma1");
            addPair(0x03C3, "sigma");
            addPair(0x03C4, "tau");
            addPair(0x03C5, "upsilon");
            addPair(0x03C6, "phi");
            addPair(0x03C7, "chi");
            addPair(0x03C8, "psi");
            addPair(0x03C9, "omega");
            addPair(0x03CA, "iotadieresis");
            addPair(0x03CB, "upsilondieresis");
            addPair(0x03CC, "omicrontonos");
            addPair(0x03CD, "upsilontonos");
            addPair(0x03CE, "omegatonos");
            addPair(0x03D1, "theta1");
            addPair(0x03D2, "Upsilon1");
            addPair(0x03D5, "phi1");
            addPair(0x03D6, "omega1");
            addPair(0x0401, "afii10023");
            addPair(0x0402, "afii10051");
            addPair(0x0403, "afii10052");
            addPair(0x0404, "afii10053");
            addPair(0x0405, "afii10054");
            addPair(0x0406, "afii10055");
            addPair(0x0407, "afii10056");
            addPair(0x0408, "afii10057");
            addPair(0x0409, "afii10058");
            addPair(0x040A, "afii10059");
            addPair(0x040B, "afii10060");
            addPair(0x040C, "afii10061");
            addPair(0x040E, "afii10062");
            addPair(0x040F, "afii10145");
            addPair(0x0410, "afii10017");
            addPair(0x0411, "afii10018");
            addPair(0x0412, "afii10019");
            addPair(0x0413, "afii10020");
            addPair(0x0414, "afii10021");
            addPair(0x0415, "afii10022");
            addPair(0x0416, "afii10024");
            addPair(0x0417, "afii10025");
            addPair(0x0418, "afii10026");
            addPair(0x0419, "afii10027");
            addPair(0x041A, "afii10028");
            addPair(0x041B, "afii10029");
            addPair(0x041C, "afii10030");
            addPair(0x041D, "afii10031");
            addPair(0x041E, "afii10032");
            addPair(0x041F, "afii10033");
            addPair(0x0420, "afii10034");
            addPair(0x0421, "afii10035");
            addPair(0x0422, "afii10036");
            addPair(0x0423, "afii10037");
            addPair(0x0424, "afii10038");
            addPair(0x0425, "afii10039");
            addPair(0x0426, "afii10040");
            addPair(0x0427, "afii10041");
            addPair(0x0428, "afii10042");
            addPair(0x0429, "afii10043");
            addPair(0x042A, "afii10044");
            addPair(0x042B, "afii10045");
            addPair(0x042C, "afii10046");
            addPair(0x042D, "afii10047");
            addPair(0x042E, "afii10048");
            addPair(0x042F, "afii10049");
            addPair(0x0430, "afii10065");
            addPair(0x0431, "afii10066");
            addPair(0x0432, "afii10067");
            addPair(0x0433, "afii10068");
            addPair(0x0434, "afii10069");
            addPair(0x0435, "afii10070");
            addPair(0x0436, "afii10072");
            addPair(0x0437, "afii10073");
            addPair(0x0438, "afii10074");
            addPair(0x0439, "afii10075");
            addPair(0x043A, "afii10076");
            addPair(0x043B, "afii10077");
            addPair(0x043C, "afii10078");
            addPair(0x043D, "afii10079");
            addPair(0x043E, "afii10080");
            addPair(0x043F, "afii10081");
            addPair(0x0440, "afii10082");
            addPair(0x0441, "afii10083");
            addPair(0x0442, "afii10084");
            addPair(0x0443, "afii10085");
            addPair(0x0444, "afii10086");
            addPair(0x0445, "afii10087");
            addPair(0x0446, "afii10088");
            addPair(0x0447, "afii10089");
            addPair(0x0448, "afii10090");
            addPair(0x0449, "afii10091");
            addPair(0x044A, "afii10092");
            addPair(0x044B, "afii10093");
            addPair(0x044C, "afii10094");
            addPair(0x044D, "afii10095");
            addPair(0x044E, "afii10096");
            addPair(0x044F, "afii10097");
            addPair(0x0451, "afii10071");
            addPair(0x0452, "afii10099");
            addPair(0x0453, "afii10100");
            addPair(0x0454, "afii10101");
            addPair(0x0455, "afii10102");
            addPair(0x0456, "afii10103");
            addPair(0x0457, "afii10104");
            addPair(0x0458, "afii10105");
            addPair(0x0459, "afii10106");
            addPair(0x045A, "afii10107");
            addPair(0x045B, "afii10108");
            addPair(0x045C, "afii10109");
            addPair(0x045E, "afii10110");
            addPair(0x045F, "afii10193");
            addPair(0x0462, "afii10146");
            addPair(0x0463, "afii10194");
            addPair(0x0472, "afii10147");
            addPair(0x0473, "afii10195");
            addPair(0x0474, "afii10148");
            addPair(0x0475, "afii10196");
            addPair(0x0490, "afii10050");
            addPair(0x0491, "afii10098");
            addPair(0x04D9, "afii10846");
            addPair(0x05B0, "afii57799");
            addPair(0x05B1, "afii57801");
            addPair(0x05B2, "afii57800");
            addPair(0x05B3, "afii57802");
            addPair(0x05B4, "afii57793");
            addPair(0x05B5, "afii57794");
            addPair(0x05B6, "afii57795");
            addPair(0x05B7, "afii57798");
            addPair(0x05B8, "afii57797");
            addPair(0x05B9, "afii57806");
            addPair(0x05BB, "afii57796");
            addPair(0x05BC, "afii57807");
            addPair(0x05BD, "afii57839");
            addPair(0x05BE, "afii57645");
            addPair(0x05BF, "afii57841");
            addPair(0x05C0, "afii57842");
            addPair(0x05C1, "afii57804");
            addPair(0x05C2, "afii57803");
            addPair(0x05C3, "afii57658");
            addPair(0x05D0, "afii57664");
            addPair(0x05D1, "afii57665");
            addPair(0x05D2, "afii57666");
            addPair(0x05D3, "afii57667");
            addPair(0x05D4, "afii57668");
            addPair(0x05D5, "afii57669");
            addPair(0x05D6, "afii57670");
            addPair(0x05D7, "afii57671");
            addPair(0x05D8, "afii57672");
            addPair(0x05D9, "afii57673");
            addPair(0x05DA, "afii57674");
            addPair(0x05DB, "afii57675");
            addPair(0x05DC, "afii57676");
            addPair(0x05DD, "afii57677");
            addPair(0x05DE, "afii57678");
            addPair(0x05DF, "afii57679");
            addPair(0x05E0, "afii57680");
            addPair(0x05E1, "afii57681");
            addPair(0x05E2, "afii57682");
            addPair(0x05E3, "afii57683");
            addPair(0x05E4, "afii57684");
            addPair(0x05E5, "afii57685");
            addPair(0x05E6, "afii57686");
            addPair(0x05E7, "afii57687");
            addPair(0x05E8, "afii57688");
            addPair(0x05E9, "afii57689");
            addPair(0x05EA, "afii57690");
            addPair(0x05F0, "afii57716");
            addPair(0x05F1, "afii57717");
            addPair(0x05F2, "afii57718");
            addPair(0x060C, "afii57388");
            addPair(0x061B, "afii57403");
            addPair(0x061F, "afii57407");
            addPair(0x0621, "afii57409");
            addPair(0x0622, "afii57410");
            addPair(0x0623, "afii57411");
            addPair(0x0624, "afii57412");
            addPair(0x0625, "afii57413");
            addPair(0x0626, "afii57414");
            addPair(0x0627, "afii57415");
            addPair(0x0628, "afii57416");
            addPair(0x0629, "afii57417");
            addPair(0x062A, "afii57418");
            addPair(0x062B, "afii57419");
            addPair(0x062C, "afii57420");
            addPair(0x062D, "afii57421");
            addPair(0x062E, "afii57422");
            addPair(0x062F, "afii57423");
            addPair(0x0630, "afii57424");
            addPair(0x0631, "afii57425");
            addPair(0x0632, "afii57426");
            addPair(0x0633, "afii57427");
            addPair(0x0634, "afii57428");
            addPair(0x0635, "afii57429");
            addPair(0x0636, "afii57430");
            addPair(0x0637, "afii57431");
            addPair(0x0638, "afii57432");
            addPair(0x0639, "afii57433");
            addPair(0x063A, "afii57434");
            addPair(0x0640, "afii57440");
            addPair(0x0641, "afii57441");
            addPair(0x0642, "afii57442");
            addPair(0x0643, "afii57443");
            addPair(0x0644, "afii57444");
            addPair(0x0645, "afii57445");
            addPair(0x0646, "afii57446");
            addPair(0x0647, "afii57470");
            addPair(0x0648, "afii57448");
            addPair(0x0649, "afii57449");
            addPair(0x064A, "afii57450");
            addPair(0x064B, "afii57451");
            addPair(0x064C, "afii57452");
            addPair(0x064D, "afii57453");
            addPair(0x064E, "afii57454");
            addPair(0x064F, "afii57455");
            addPair(0x0650, "afii57456");
            addPair(0x0651, "afii57457");
            addPair(0x0652, "afii57458");
            addPair(0x0660, "afii57392");
            addPair(0x0661, "afii57393");
            addPair(0x0662, "afii57394");
            addPair(0x0663, "afii57395");
            addPair(0x0664, "afii57396");
            addPair(0x0665, "afii57397");
            addPair(0x0666, "afii57398");
            addPair(0x0667, "afii57399");
            addPair(0x0668, "afii57400");
            addPair(0x0669, "afii57401");
            addPair(0x066A, "afii57381");
            addPair(0x066D, "afii63167");
            addPair(0x0679, "afii57511");
            addPair(0x067E, "afii57506");
            addPair(0x0686, "afii57507");
            addPair(0x0688, "afii57512");
            addPair(0x0691, "afii57513");
            addPair(0x0698, "afii57508");
            addPair(0x06A4, "afii57505");
            addPair(0x06AF, "afii57509");
            addPair(0x06BA, "afii57514");
            addPair(0x06D2, "afii57519");
            addPair(0x06D5, "afii57534");
            addPair(0x1E80, "Wgrave");
            addPair(0x1E81, "wgrave");
            addPair(0x1E82, "Wacute");
            addPair(0x1E83, "wacute");
            addPair(0x1E84, "Wdieresis");
            addPair(0x1E85, "wdieresis");
            addPair(0x1EF2, "Ygrave");
            addPair(0x1EF3, "ygrave");
            addPair(0x200C, "afii61664");
            addPair(0x200D, "afii301");
            addPair(0x200E, "afii299");
            addPair(0x200F, "afii300");
            addPair(0x2012, "figuredash");
            addPair(0x2013, "endash");
            addPair(0x2014, "emdash");
            addPair(0x2015, "afii00208");
            addPair(0x2017, "underscoredbl");
            addPair(0x2018, "quoteleft");
            addPair(0x2019, "quoteright");
            addPair(0x201A, "quotesinglbase");
            addPair(0x201B, "quotereversed");
            addPair(0x201C, "quotedblleft");
            addPair(0x201D, "quotedblright");
            addPair(0x201E, "quotedblbase");
            addPair(0x2020, "dagger");
            addPair(0x2021, "daggerdbl");
            addPair(0x2022, "bullet");
            addPair(0x2024, "onedotenleader");
            addPair(0x2025, "twodotenleader");
            addPair(0x2026, "ellipsis");
            addPair(0x202C, "afii61573");
            addPair(0x202D, "afii61574");
            addPair(0x202E, "afii61575");
            addPair(0x2030, "perthousand");
            addPair(0x2032, "minute");
            addPair(0x2033, "second");
            addPair(0x2039, "guilsinglleft");
            addPair(0x203A, "guilsinglright");
            addPair(0x203C, "exclamdbl");
            addPair(0x2044, "fraction");
            addPair(0x2070, "zerosuperior");
            addPair(0x2074, "foursuperior");
            addPair(0x2075, "fivesuperior");
            addPair(0x2076, "sixsuperior");
            addPair(0x2077, "sevensuperior");
            addPair(0x2078, "eightsuperior");
            addPair(0x2079, "ninesuperior");
            addPair(0x207D, "parenleftsuperior");
            addPair(0x207E, "parenrightsuperior");
            addPair(0x207F, "nsuperior");
            addPair(0x2080, "zeroinferior");
            addPair(0x2081, "oneinferior");
            addPair(0x2082, "twoinferior");
            addPair(0x2083, "threeinferior");
            addPair(0x2084, "fourinferior");
            addPair(0x2085, "fiveinferior");
            addPair(0x2086, "sixinferior");
            addPair(0x2087, "seveninferior");
            addPair(0x2088, "eightinferior");
            addPair(0x2089, "nineinferior");
            addPair(0x208D, "parenleftinferior");
            addPair(0x208E, "parenrightinferior");
            addPair(0x20A1, "colonmonetary");
            addPair(0x20A3, "franc");
            addPair(0x20A4, "lira");
            addPair(0x20A7, "peseta");
            addPair(0x20AA, "afii57636");
            addPair(0x20AB, "dong");
            addPair(0x20AC, "Euro");
            addPair(0x2105, "afii61248");
            addPair(0x2111, "Ifraktur");
            addPair(0x2113, "afii61289");
            addPair(0x2116, "afii61352");
            addPair(0x2118, "weierstrass");
            addPair(0x211C, "Rfraktur");
            addPair(0x211E, "prescription");
            addPair(0x2122, "trademark");
            addPair(0x2126, "Omega");
            addPair(0x212E, "estimated");
            addPair(0x2135, "aleph");
            addPair(0x2153, "onethird");
            addPair(0x2154, "twothirds");
            addPair(0x215B, "oneeighth");
            addPair(0x215C, "threeeighths");
            addPair(0x215D, "fiveeighths");
            addPair(0x215E, "seveneighths");
            addPair(0x2190, "arrowleft");
            addPair(0x2191, "arrowup");
            addPair(0x2192, "arrowright");
            addPair(0x2193, "arrowdown");
            addPair(0x2194, "arrowboth");
            addPair(0x2195, "arrowupdn");
            addPair(0x21A8, "arrowupdnbse");
            addPair(0x21B5, "carriagereturn");
            addPair(0x21D0, "arrowdblleft");
            addPair(0x21D1, "arrowdblup");
            addPair(0x21D2, "arrowdblright");
            addPair(0x21D3, "arrowdbldown");
            addPair(0x21D4, "arrowdblboth");
            addPair(0x2200, "universal");
            addPair(0x2202, "partialdiff");
            addPair(0x2203, "existential");
            addPair(0x2205, "emptyset");
            addPair(0x2206, "Delta");
            addPair(0x2207, "gradient");
            addPair(0x2208, "element");
            addPair(0x2209, "notelement");
            addPair(0x220B, "suchthat");
            addPair(0x220F, "product");
            addPair(0x2211, "summation");
            addPair(0x2212, "minus");
            addPair(0x2215, "fraction");
            addPair(0x2217, "asteriskmath");
            addPair(0x2219, "periodcentered");
            addPair(0x221A, "radical");
            addPair(0x221D, "proportional");
            addPair(0x221E, "infinity");
            addPair(0x221F, "orthogonal");
            addPair(0x2220, "angle");
            addPair(0x2227, "logicaland");
            addPair(0x2228, "logicalor");
            addPair(0x2229, "intersection");
            addPair(0x222A, "union");
            addPair(0x222B, "integral");
            addPair(0x2234, "therefore");
            addPair(0x223C, "similar");
            addPair(0x2245, "congruent");
            addPair(0x2248, "approxequal");
            addPair(0x2260, "notequal");
            addPair(0x2261, "equivalence");
            addPair(0x2264, "lessequal");
            addPair(0x2265, "greaterequal");
            addPair(0x2282, "propersubset");
            addPair(0x2283, "propersuperset");
            addPair(0x2284, "notsubset");
            addPair(0x2286, "reflexsubset");
            addPair(0x2287, "reflexsuperset");
            addPair(0x2295, "circleplus");
            addPair(0x2297, "circlemultiply");
            addPair(0x22A5, "perpendicular");
            addPair(0x22C5, "dotmath");
            addPair(0x2302, "house");
            addPair(0x2310, "revlogicalnot");
            addPair(0x2320, "integraltp");
            addPair(0x2321, "integralbt");
            addPair(0x2329, "angleleft");
            addPair(0x232A, "angleright");
            addPair(0x2500, "SF100000");
            addPair(0x2502, "SF110000");
            addPair(0x250C, "SF010000");
            addPair(0x2510, "SF030000");
            addPair(0x2514, "SF020000");
            addPair(0x2518, "SF040000");
            addPair(0x251C, "SF080000");
            addPair(0x2524, "SF090000");
            addPair(0x252C, "SF060000");
            addPair(0x2534, "SF070000");
            addPair(0x253C, "SF050000");
            addPair(0x2550, "SF430000");
            addPair(0x2551, "SF240000");
            addPair(0x2552, "SF510000");
            addPair(0x2553, "SF520000");
            addPair(0x2554, "SF390000");
            addPair(0x2555, "SF220000");
            addPair(0x2556, "SF210000");
            addPair(0x2557, "SF250000");
            addPair(0x2558, "SF500000");
            addPair(0x2559, "SF490000");
            addPair(0x255A, "SF380000");
            addPair(0x255B, "SF280000");
            addPair(0x255C, "SF270000");
            addPair(0x255D, "SF260000");
            addPair(0x255E, "SF360000");
            addPair(0x255F, "SF370000");
            addPair(0x2560, "SF420000");
            addPair(0x2561, "SF190000");
            addPair(0x2562, "SF200000");
            addPair(0x2563, "SF230000");
            addPair(0x2564, "SF470000");
            addPair(0x2565, "SF480000");
            addPair(0x2566, "SF410000");
            addPair(0x2567, "SF450000");
            addPair(0x2568, "SF460000");
            addPair(0x2569, "SF400000");
            addPair(0x256A, "SF540000");
            addPair(0x256B, "SF530000");
            addPair(0x256C, "SF440000");
            addPair(0x2580, "upblock");
            addPair(0x2584, "dnblock");
            addPair(0x2588, "block");
            addPair(0x258C, "lfblock");
            addPair(0x2590, "rtblock");
            addPair(0x2591, "ltshade");
            addPair(0x2592, "shade");
            addPair(0x2593, "dkshade");
            addPair(0x25A0, "filledbox");
            addPair(0x25A1, "H22073");
            addPair(0x25AA, "H18543");
            addPair(0x25AB, "H18551");
            addPair(0x25AC, "filledrect");
            addPair(0x25B2, "triagup");
            addPair(0x25BA, "triagrt");
            addPair(0x25BC, "triagdn");
            addPair(0x25C4, "triaglf");
            addPair(0x25CA, "lozenge");
            addPair(0x25CB, "circle");
            addPair(0x25CF, "H18533");
            addPair(0x25D8, "invbullet");
            addPair(0x25D9, "invcircle");
            addPair(0x25E6, "openbullet");
            addPair(0x263A, "smileface");
            addPair(0x263B, "invsmileface");
            addPair(0x263C, "sun");
            addPair(0x2640, "female");
            addPair(0x2642, "male");
            addPair(0x2660, "spade");
            addPair(0x2663, "club");
            addPair(0x2665, "heart");
            addPair(0x2666, "diamond");
            addPair(0x266A, "musicalnote");
            addPair(0x266B, "musicalnotedbl");
            addPair(0xF6BE, "dotlessj");
            addPair(0xF6BF, "LL");
            addPair(0xF6C0, "ll");
            addPair(0xF6C1, "Scedilla");
            addPair(0xF6C2, "scedilla");
            addPair(0xF6C3, "commaaccent");
            addPair(0xF6C4, "afii10063");
            addPair(0xF6C5, "afii10064");
            addPair(0xF6C6, "afii10192");
            addPair(0xF6C7, "afii10831");
            addPair(0xF6C8, "afii10832");
            addPair(0xF6C9, "Acute");
            addPair(0xF6CA, "Caron");
            addPair(0xF6CB, "Dieresis");
            addPair(0xF6CC, "DieresisAcute");
            addPair(0xF6CD, "DieresisGrave");
            addPair(0xF6CE, "Grave");
            addPair(0xF6CF, "Hungarumlaut");
            addPair(0xF6D0, "Macron");
            addPair(0xF6D1, "cyrBreve");
            addPair(0xF6D2, "cyrFlex");
            addPair(0xF6D3, "dblGrave");
            addPair(0xF6D4, "cyrbreve");
            addPair(0xF6D5, "cyrflex");
            addPair(0xF6D6, "dblgrave");
            addPair(0xF6D7, "dieresisacute");
            addPair(0xF6D8, "dieresisgrave");
            addPair(0xF6D9, "copyrightserif");
            addPair(0xF6DA, "registerserif");
            addPair(0xF6DB, "trademarkserif");
            addPair(0xF6DC, "onefitted");
            addPair(0xF6DD, "rupiah");
            addPair(0xF6DE, "threequartersemdash");
            addPair(0xF6DF, "centinferior");
            addPair(0xF6E0, "centsuperior");
            addPair(0xF6E1, "commainferior");
            addPair(0xF6E2, "commasuperior");
            addPair(0xF6E3, "dollarinferior");
            addPair(0xF6E4, "dollarsuperior");
            addPair(0xF6E5, "hypheninferior");
            addPair(0xF6E6, "hyphensuperior");
            addPair(0xF6E7, "periodinferior");
            addPair(0xF6E8, "periodsuperior");
            addPair(0xF6E9, "asuperior");
            addPair(0xF6EA, "bsuperior");
            addPair(0xF6EB, "dsuperior");
            addPair(0xF6EC, "esuperior");
            addPair(0xF6ED, "isuperior");
            addPair(0xF6EE, "lsuperior");
            addPair(0xF6EF, "msuperior");
            addPair(0xF6F0, "osuperior");
            addPair(0xF6F1, "rsuperior");
            addPair(0xF6F2, "ssuperior");
            addPair(0xF6F3, "tsuperior");
            addPair(0xF6F4, "Brevesmall");
            addPair(0xF6F5, "Caronsmall");
            addPair(0xF6F6, "Circumflexsmall");
            addPair(0xF6F7, "Dotaccentsmall");
            addPair(0xF6F8, "Hungarumlautsmall");
            addPair(0xF6F9, "Lslashsmall");
            addPair(0xF6FA, "OEsmall");
            addPair(0xF6FB, "Ogoneksmall");
            addPair(0xF6FC, "Ringsmall");
            addPair(0xF6FD, "Scaronsmall");
            addPair(0xF6FE, "Tildesmall");
            addPair(0xF6FF, "Zcaronsmall");
            addPair(0xF721, "exclamsmall");
            addPair(0xF724, "dollaroldstyle");
            addPair(0xF726, "ampersandsmall");
            addPair(0xF730, "zerooldstyle");
            addPair(0xF731, "oneoldstyle");
            addPair(0xF732, "twooldstyle");
            addPair(0xF733, "threeoldstyle");
            addPair(0xF734, "fouroldstyle");
            addPair(0xF735, "fiveoldstyle");
            addPair(0xF736, "sixoldstyle");
            addPair(0xF737, "sevenoldstyle");
            addPair(0xF738, "eightoldstyle");
            addPair(0xF739, "nineoldstyle");
            addPair(0xF73F, "questionsmall");
            addPair(0xF760, "Gravesmall");
            addPair(0xF761, "Asmall");
            addPair(0xF762, "Bsmall");
            addPair(0xF763, "Csmall");
            addPair(0xF764, "Dsmall");
            addPair(0xF765, "Esmall");
            addPair(0xF766, "Fsmall");
            addPair(0xF767, "Gsmall");
            addPair(0xF768, "Hsmall");
            addPair(0xF769, "Ismall");
            addPair(0xF76A, "Jsmall");
            addPair(0xF76B, "Ksmall");
            addPair(0xF76C, "Lsmall");
            addPair(0xF76D, "Msmall");
            addPair(0xF76E, "Nsmall");
            addPair(0xF76F, "Osmall");
            addPair(0xF770, "Psmall");
            addPair(0xF771, "Qsmall");
            addPair(0xF772, "Rsmall");
            addPair(0xF773, "Ssmall");
            addPair(0xF774, "Tsmall");
            addPair(0xF775, "Usmall");
            addPair(0xF776, "Vsmall");
            addPair(0xF777, "Wsmall");
            addPair(0xF778, "Xsmall");
            addPair(0xF779, "Ysmall");
            addPair(0xF77A, "Zsmall");
            addPair(0xF7A1, "exclamdownsmall");
            addPair(0xF7A2, "centoldstyle");
            addPair(0xF7A8, "Dieresissmall");
            addPair(0xF7AF, "Macronsmall");
            addPair(0xF7B4, "Acutesmall");
            addPair(0xF7B8, "Cedillasmall");
            addPair(0xF7BF, "questiondownsmall");
            addPair(0xF7E0, "Agravesmall");
            addPair(0xF7E1, "Aacutesmall");
            addPair(0xF7E2, "Acircumflexsmall");
            addPair(0xF7E3, "Atildesmall");
            addPair(0xF7E4, "Adieresissmall");
            addPair(0xF7E5, "Aringsmall");
            addPair(0xF7E6, "AEsmall");
            addPair(0xF7E7, "Ccedillasmall");
            addPair(0xF7E8, "Egravesmall");
            addPair(0xF7E9, "Eacutesmall");
            addPair(0xF7EA, "Ecircumflexsmall");
            addPair(0xF7EB, "Edieresissmall");
            addPair(0xF7EC, "Igravesmall");
            addPair(0xF7ED, "Iacutesmall");
            addPair(0xF7EE, "Icircumflexsmall");
            addPair(0xF7EF, "Idieresissmall");
            addPair(0xF7F0, "Ethsmall");
            addPair(0xF7F1, "Ntildesmall");
            addPair(0xF7F2, "Ogravesmall");
            addPair(0xF7F3, "Oacutesmall");
            addPair(0xF7F4, "Ocircumflexsmall");
            addPair(0xF7F5, "Otildesmall");
            addPair(0xF7F6, "Odieresissmall");
            addPair(0xF7F8, "Oslashsmall");
            addPair(0xF7F9, "Ugravesmall");
            addPair(0xF7FA, "Uacutesmall");
            addPair(0xF7FB, "Ucircumflexsmall");
            addPair(0xF7FC, "Udieresissmall");
            addPair(0xF7FD, "Yacutesmall");
            addPair(0xF7FE, "Thornsmall");
            addPair(0xF7FF, "Ydieresissmall");
            addPair(0xF8E5, "radicalex");
            addPair(0xF8E6, "arrowvertex");
            addPair(0xF8E7, "arrowhorizex");
            addPair(0xF8E8, "registersans");
            addPair(0xF8E9, "copyrightsans");
            addPair(0xF8EA, "trademarksans");
            addPair(0xF8EB, "parenlefttp");
            addPair(0xF8EC, "parenleftex");
            addPair(0xF8ED, "parenleftbt");
            addPair(0xF8EE, "bracketlefttp");
            addPair(0xF8EF, "bracketleftex");
            addPair(0xF8F0, "bracketleftbt");
            addPair(0xF8F1, "bracelefttp");
            addPair(0xF8F2, "braceleftmid");
            addPair(0xF8F3, "braceleftbt");
            addPair(0xF8F4, "braceex");
            addPair(0xF8F5, "integralex");
            addPair(0xF8F6, "parenrighttp");
            addPair(0xF8F7, "parenrightex");
            addPair(0xF8F8, "parenrightbt");
            addPair(0xF8F9, "bracketrighttp");
            addPair(0xF8FA, "bracketrightex");
            addPair(0xF8FB, "bracketrightbt");
            addPair(0xF8FC, "bracerighttp");
            addPair(0xF8FD, "bracerightmid");
            addPair(0xF8FE, "bracerightbt");
            addPair(0xFB00, "ff");
            addPair(0xFB01, "fi");
            addPair(0xFB02, "fl");
            addPair(0xFB03, "ffi");
            addPair(0xFB04, "ffl");
            addPair(0xFB1F, "afii57705");
            addPair(0xFB2A, "afii57694");
            addPair(0xFB2B, "afii57695");
            addPair(0xFB35, "afii57723");
            addPair(0xFB4B, "afii57700");
            addPair(0xFFFF, "");
        }
    }
}
